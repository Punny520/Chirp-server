<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyq.chirp.chirperserver.mapper.ChirperMapper">

    <resultMap id="chirperResultMap" type="com.zyq.chirp.chirperserver.domain.pojo.Chirper">
        <!--@mbg.generated-->
        <id column="tb_chirper_id" property="id"/>
        <result column="tb_chirper_author_id" property="authorId"/>
        <result column="tb_chirper_conversation_id" property="conversationId"/>
        <result column="tb_chirper_community_id" property="communityId"/>
        <result column="tb_chirper_in_reply_to_user_id" property="inReplyToUserId"/>
        <result column="in_reply_to_chirper_id" property="inReplyToChirperId"/>
        <result column="tb_chirper_create_time" property="createTime"/>
        <result column="tb_chirper_text" property="text"/>
        <result column="tb_chirper_type" property="type"/>
        <result column="tb_chirper_referenced_chirper_id" property="referencedChirperId"/>
        <result column="tb_chirper_media_keys" property="mediaKeys"
                typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="tb_chirper_view_count" property="viewCount"/>
        <result column="tb_chirper_like_count" property="likeCount"/>
        <result column="tb_chirper_forward_count" property="forwardCount"/>
        <result column="tb_chirper_quote_count" property="quoteCount"/>
        <result column="tb_chirper_reply_count" property="replyCount"/>
        <result column="tb_chirper_status" property="status"/>
    </resultMap>

    <insert id="addReply">
        insert into tb_chirper(id, author_id, conversation_id, community_id, in_reply_to_chirper_id,
                               in_reply_to_user_id, create_time,
                               active_time,
                               text, type, media_keys, view_count, reply_count, like_count,
                               quote_count, forward_count, reply_range, status)
        select #{id},
               #{authorId},
               tc1.conversation_id,
               tc1.community_id,
               #{inReplyToChirperId},
               tc1.author_id,
               #{createTime},
               #{activeTime},
               #{text},
               #{type},
               #{mediaKeys,typeHandler=com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler},
               0,
               0,
               0,
               0,
               0,
               #{replyRange},
               #{status}
        from tb_chirper tc1
        where tc1.id = #{inReplyToChirperId}
    </insert>

    <select id="getIdByReferenceAndAuthor" resultType="com.zyq.chirp.chirperserver.domain.pojo.Chirper">
        select id,author_id,referenced_chirper_id from tb_chirper where type=#{type}
        and status='${@com.zyq.chirp.chirperserver.domain.enums.ChirperStatus@ACTIVE.getStatus()}'
        and (referenced_chirper_id,author_id)
        in
        <foreach collection="chirpers" item="item" close=")" separator="," open="(">
            #{item.referencedChirperId},
            #{item.authorId}
        </foreach>
    </select>

    <insert id="saveBatch">
        insert into tb_chirper(id, author_id, conversation_id, in_reply_to_chirper_id, in_reply_to_user_id, create_time,
        text, type, referenced_chirper_id, media_keys, view_count, reply_count, like_count, quote_count, forward_count,
        status)
        select temp.* from
        (<foreach collection="chirpers" item="item" separator="union">
        select
        #{item.id},
        #{item.authorId} as author_id,
        #{item.conversationId},
        #{item.inReplyToChirperId} as reply_id,
        #{item.inReplyToUserId},
        #{item.createTime},
        #{item.text},
        #{item.type},
        #{item.referencedChirperId} as reference_id,
        #{item.mediaKeys},
        #{item.viewCount},
        #{item.replyCount},
        #{item.likeCount},
        #{item.quoteCount},
        #{item.forwardCount},
        #{item.status}
    </foreach>) as temp
        join tb_user tu on tu.id=temp.author_id
        <if test="type=@com.zyq.chirp.chirperserver.domain.enums.ChirperType@FORWARD
or
type=@com.zyq.chirp.chirperserver.domain.enums.ChirperType@QUOTE">
            join tb_chirper tc on tc.id=temp.reference_id
        </if>
    </insert>

    <!--    <insert id="addForwardBatch">
            insert into tb_chirper(id, author_id, create_time,  type, referenced_chirper_id, status)
            select temp.* from
             (<foreach collection="chirpers" item="item"  separator="union">
            select
            #{item.id} as id,
            #{item.authorId} as author_id,
            #{item.createTime} as create_time,
            #{item.type} as type,
            #{item.referencedChirperId} as refer_id,
            #{item.status} as status
        </foreach>)temp
            join tb_chirper tc on tc.id=temp.refer_id
         on duplicate key update
            status=values(status),
            create_time=values(create_time)
        </insert>-->

    <insert id="addQuote">
        insert into tb_chirper(id, author_id, conversation_id, create_time, active_time, text, type,
                               referenced_chirper_id,
                               media_keys, view_count, reply_count, like_count, quote_count, forward_count, reply_range,
                               status)
        select #{id},
               #{authorId},
               #{conversationId},
               #{createTime},
               #{activeTime},
               #{text},
               #{type},
               #{referencedChirperId},
               #{mediaKeys},
               #{viewCount},
               #{replyCount},
               #{likeCount},
               #{quoteCount},
               #{forwardCount},
               #{replyRange},
               #{status}
        where exists(select id from tb_chirper where id = #{referencedChirperId})
    </insert>

    <insert id="addForward">
        insert into tb_chirper(id, author_id, create_time, type, referenced_chirper_id, status)
        values (#{id}, #{authorId}, #{createTime}, #{type}, #{referencedChirperId}, #{status})
        on duplicate key update status      =values(status),
                                create_time = values(create_time)
    </insert>
</mapper>